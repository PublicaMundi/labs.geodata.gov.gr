- hosts: dev
  gather_facts: yes
  #gather_facts: no #Enable on first run, cause Debian does not have python installed by default
  user: root
  tasks:
    - name: Install ansible prerequisites
      script: ansible_prereqs.sh creates=/root/.ansible_prereqs_installed

    - name: Update apt packages cache
      action: apt update_cache=yes

    - name: Install needed packages
      action: apt pkg={{item}} state=installed
      with_items:
        - htop
        - python
        - python-virtualenv
        - python-setuptools
        - python-dev
        - build-essential
        - vim
        - git
        - screen
        - sudo
        - less
        - rsync
        - curl
        - wget

    # Adding new ckaner user
    - user: name=ckaner state=present shell=/bin/bash group=users createhome=no
    #- user: name=ckaner state=absent

    ##############
    # SOLR setup #
    ##############

    - name: Install tomcat
      action: apt pkg={{item}} state=installed
      with_items:
        - openjdk-7-jdk
        - tomcat6
        - tomcat6-admin

    - name: Stopping tomcat service
      command: service tomcat6 stop

    - name: Download Common Logging 1.1.3
      get_url: url="http://apache.cc.uoc.gr//commons/logging/binaries/commons-logging-1.1.3-bin.tar.gz" dest="~/"

    - name: Unpack common-logging
      shell: "cd ~/ && tar -zxvf commons-logging-1.1.3-bin.tar.gz && cd commons-logging-1.1.3 && cp commons-logging-*.jar /usr/share/tomcat6/lib/"

    - name: Download slf4j 1.7.5
      get_url: url="http://www.slf4j.org/dist/slf4j-1.7.5.tar.gz" dest="~/"

    - name: Unpack slf4j
      shell: "cd ~/ && tar -zxvf slf4j-1.7.5.tar.gz && cd slf4j-1.7.5 && cp slf4j-*.jar /usr/share/tomcat6/lib/"

    - name: Download SOLR 4.2.1
      get_url: url="http://archive.apache.org/dist/lucene/solr/4.2.1/solr-4.2.1.tgz" dest="~/"

    - name: Unpack SOLR
      shell: "cd ~/ && tar -zxvf solr-4.2.1.tgz && cd solr-4.2.1/dist && cp solr-4.2.1.war /var/lib/tomcat6/webapps/solr.war"

    - name: Setup SOLR home folder
      shell: "mkdir /home/solr && cp -R ~/solr-4.2.1/example/solr/* /home/solr && chown -R tomcat6:tomcat6 /home/solr"

    - name: Restarting tomcat service
      command: service tomcat6 restart

    - name: Copy SOLR config file
      action: copy src=var/lib/tomcat6/webapps/solr/WEB-INF/web.xml dest=/var/lib/tomcat6/webapps/solr/WEB-INF/web.xml

    - name: Backup default schema.xml
      shell: "cd /home/solr/collection1/conf && mv schema.xml schema.xml.bak"

    - name: Download latest CKAN schema file for SOLR
      get_url: url="https://github.com/PublicaMundi/ckan/raw/dev.publicamundi.eu/ckan/config/solr/schema.xml" dest="/home/solr/collection1/conf/schema.xml" validate_certs=no
      sudo: yes
      sudo_user: tomcat6

    - name: Restarting tomcat service
      command: service tomcat6 restart

    ####################
    # POSTGRESQL setup #
    ####################

    - name: Add PostgreSQL apt repository
      action: copy src=etc/apt/sources.list.d/pgdg.list dest=/etc/apt/sources.list.d/pgdg.list

    - apt_key: url=https://www.postgresql.org/media/keys/ACCC4CF8.asc state=present validate_certs=no

    - name: Update apt packages cache
      action: apt update_cache=yes

    - name: Install Postgres
      action: apt pkg={{item}} state=installed
      with_items:
        - postgresql-9.3
        - postgis
        - postgresql-common
        - libpq-dev
        - libxml2-dev
        - libxslt1-dev
        - supervisor

    - name: Backup default postgresql.conf
      shell: "cd /etc/postgresql/9.3/main && mv postgresql.conf postgresql.conf.orig"

    - name: Copy tuned postgresql files
      action: copy src={{item}} dest=/{{item}}
      with_items:
        - etc/postgresql/9.3/main/postgresql.conf

    - name: Restarting postgresql service
      command: service postgresql restart