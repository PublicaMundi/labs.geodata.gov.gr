- hosts: dev
  user: root
  tasks:
    - name: Install epel
      action: command creates=/etc/yum.repos.d/epel.repo rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm

    - name: Install needed packages
      action: yum pkg={{item}} state=installed
      with_items:
        - htop
        - atool
        - python-virtualenv
        - python-setuptools
        - git
        - python-devel
        - rpmdevtools
        - gcc
        - gcc-c++
        - make
        - bison
        - libselinux-python
        - wget
        - vim
        - screen
        - unzip
        - curl

    # Adding new ckaner user
    - user: name=ckaner state=present shell=/bin/bash group=users createhome=no
    #- user: name=ckaner state=absent

    - name: Stop firewall
      command: service iptables stop

    - name: Disable firewall service
      command: chkconfig iptables off

    - name: Disable selinux
      command: /usr/sbin/setenforce 0

    ##############
    # SOLR setup #
    ##############

    - name: Install Tomcat and Java
      action: yum pkg={{item}} state=installed
      with_items:
        - java-openjdk
        - tomcat6
        - tomcat6-webapps
        - tomcat6-admin-webapps

    - name: Enabling tomcat service
      command: chkconfig tomcat6 on

    - name: Stopping tomcat service
      command: service tomcat6 stop

    - name: Download Common Logging 1.1.3
      get_url: url="http://apache.org/dist/commons/logging/binaries/commons-logging-1.1.3-bin.tar.gz" dest="~/"

    - name: Unpack common-logging
      shell: "cd ~/ && tar -zxvf commons-logging-1.1.3-bin.tar.gz && cd commons-logging-1.1.3 && cp commons-logging-*.jar /usr/share/tomcat6/lib/"

    - name: Download slf4j 1.7.5
      get_url: url="http://www.slf4j.org/dist/slf4j-1.7.5.tar.gz" dest="~/"

    - name: Unpack slf4j
      shell: "cd ~/ && tar -zxvf slf4j-1.7.5.tar.gz && cd slf4j-1.7.5 && cp slf4j-*.jar /usr/share/tomcat6/lib/"

    - name: Download SOLR 4.2.1
      get_url: url="http://archive.apache.org/dist/lucene/solr/4.2.1/solr-4.2.1.tgz" dest="~/"

    - name: Unpack SOLR
      shell: "cd ~/ && tar -zxvf solr-4.2.1.tgz && cd solr-4.2.1/dist && cp solr-4.2.1.war /var/lib/tomcat6/webapps/solr.war"

    - name: Setup SOLR home folder
      shell: "mkdir /home/solr && cp -R ~/solr-4.2.1/example/solr/* /home/solr && chown -R tomcat /home/solr"

    - name: Restarting tomcat service
      command: service tomcat6 start

    - name: Wait for 15 secs so that war is deployed
      action: pause seconds=15

    - name: Copy SOLR config file
      action: copy src=var/lib/tomcat6/webapps/solr/WEB-INF/web.xml dest=/var/lib/tomcat6/webapps/solr/WEB-INF/web.xml

    - name: Backup default schema.xml
      shell: "cd /home/solr/collection1/conf && mv schema.xml schema.xml.bak"

    - name: Download latest CKAN schema file for SOLR
      get_url: url="https://github.com/PublicaMundi/ckan/raw/dev.publicamundi.eu/ckan/config/solr/schema.xml" dest="/home/solr/collection1/conf/schema.xml" validate_certs=no
      sudo: yes
      sudo_user: tomcat

    - name: Restarting tomcat service
      command: service tomcat6 restart

    ###################
    # GeoServer setup #
    ###################

    - name: Download GeoServer 2.5.4
      get_url: url="http://sourceforge.net/projects/geoserver/files/GeoServer/2.5.4/geoserver-2.5.4-war.zip" dest="~/"

    - name: Unpack GeoServer war
      shell: "cd ~/ && unzip -e geoserver-2.5.4-war.zip && cp geoserver.war /var/lib/tomcat6/webapps/geoserver.war"

    - name: Copy tuned tomcat files
      action: copy src={{item}} dest=/{{item}}
      with_items:
        - etc/tomcat6/tomcat6.conf

    - name: Restarting tomcat service
      command: service tomcat6 restart

    - name: Wait for 60 secs so that war is deployed
      action: pause seconds=60

    ####################
    # POSTGRESQL setup #
    ####################

    - name: Add PostgreSQL repository
      action: command rpm -Uvh http://yum.postgresql.org/9.3/redhat/rhel-6-x86_64/pgdg-redhat93-9.3-1.noarch.rpm

    - name: Install PostgreSQL 9.3
      action: yum pkg={{item}} state=installed
      with_items:
        - postgresql93-libs
        - postgresql93-server
        - postgresql93
        - postgis2_93
        - hdf5
        - proj
        - python-psycopg2
        - libxml2-devel
        - libxslt-devel
        - postgresql93-devel
        - tidy
        - tidy-devel
        - supervisor

    - name: Create PostgreSQL cluster
      command: service postgresql-9.3 initdb

    - name: Backup default postgresql.conf
      shell: "cd /var/lib/pgsql/9.3/data && mv postgresql.conf postgresql.conf.orig"

    - name: Copy PostgreSQL configuration files
      action: copy src={{item}} dest=/{{item}}
      with_items:
        - var/lib/pgsql/9.3/data/postgresql.conf
        - var/lib/pgsql/9.3/data/pg_hba.conf

    - name: Start PostgreSQL service
      command: service postgresql-9.3 start

    - name: Enable PostgreSQL service
      command: chkconfig postgresql-9.3 on

    - name: Create ckaner role
      action: postgresql_user user=ckaner password=ckaner role_attr_flags=NOCREATEDB,LOGIN state=present

    - name: Create ckan_datastorer role
      action: postgresql_user user=ckan_datastorer password=ckan_datastorer role_attr_flags=NOCREATEDB,LOGIN state=present

    - name: Create geoserver role
      action: postgresql_user user=geoserver password=geoserver role_attr_flags=NOCREATEDB,LOGIN state=present

    - name: Create rasdaman role
      action: postgresql_user user=rasdaman password=rasdaman role_attr_flags=NOCREATEDB,LOGIN state=present

    - name: Create petauser role
      action: postgresql_user user=petauser password=petauser role_attr_flags=NOCREATEDB,LOGIN state=present

    - name: Create ckan database
      action: postgresql_db name=ckan owner=ckaner encoding='UTF-8'

    - name: Create ckan_tests database
      action: postgresql_db name=ckan_tests owner=ckaner encoding='UTF-8'

    - name: Create ckan_data database
      action: postgresql_db name=ckan_data owner=ckan_datastorer encoding='UTF-8'

    - name: Create ckan_data_tests database
      action: postgresql_db name=ckan_data_tests owner=ckan_datastorer encoding='UTF-8'

    - name: Create ckan_vector database
      action: postgresql_db name=ckan_vector owner=ckan_datastorer encoding='UTF-8'

    - name: Create ckan_raster database
      action: postgresql_db name=ckan_raster owner=rasdaman encoding='UTF-8'
      # action: postgresql_db name=RASBASE owner=rasdaman encoding='UTF-8'

    - name: Create petascopedb database
      action: postgresql_db name=petascopedb owner=petauser encoding='UTF-8'

    - name: Install postgis to ckan database
      action: command psql -d ckan -c 'CREATE EXTENSION "postgis";'
      sudo: yes
      sudo_user: postgres

    - name: Install postgis to ckan_tests database
      action: command psql -d ckan_tests -c 'CREATE EXTENSION "postgis";'
      sudo: yes
      sudo_user: postgres

    - name: Change postgis owner to ckan database
      action: command psql -d ckan -c 'ALTER TABLE spatial_ref_sys OWNER TO ckaner'
      sudo: yes
      sudo_user: postgres

    - name: Change postgis owner to ckan_tests database
      action: command psql -d ckan_tests -c 'ALTER TABLE spatial_ref_sys OWNER TO ckaner'
      sudo: yes
      sudo_user: postgres

    ##############
    # CKAN setup #
    ##############

    - name: Install needed packages
      action: yum pkg={{item}} state=installed
      with_items:
        - p7zip
        - httpd
        - gdal-python

    - name: Create link of pg_config for PostgreSQL 9.3
      action: command ln -s /usr/pgsql-9.3/bin/pg_config /usr/bin/pg_config

    - name: Add CKAN path
      action: file path=/var/local/ckan/default state=directory

    - name: Add deployment folders
      shell: "cd /var/local/ckan/default && mkdir log && mkdir run && mkdir tmp && mkdir -p files/resources && mkdir -p files/storage"

    - name: Create virtualenv for CKAN
      shell: virtualenv --setuptools --system-site-packages /var/local/ckan/default/pyenv

    - name: Change owner of virtualenv to ckaner
      shell: chown -R ckaner:users /var/local/ckan/default

    - name: Change owner of tmp to apache
      shell: chown -R apache:apache /var/local/ckan/default/tmp

    - name: Install latest pip
      action: pip name=pip virtualenv=/var/local/ckan/default/pyenv/
      sudo: yes
      sudo_user: ckaner

    - name: Get CKAN from git
      action: git repo=https://github.com/PublicaMundi/ckan.git dest=/var/local/ckan/default/pyenv/src/ckan version=dev.publicamundi.eu

    - name: Change owner of source folder
      shell: chown -R ckaner:users /var/local/ckan/default/pyenv/src/ckan

    - name: Install CKAN requirements
      action: pip requirements=/var/local/ckan/default/pyenv/src/ckan/requirements.txt virtualenv=/var/local/ckan/default/pyenv/
      sudo: yes
      sudo_user: ckaner

    - name: Run setup.py develop for CKAN
      action: command chdir=/var/local/ckan/default/pyenv/src/ckan/ ../../bin/python setup.py develop
      sudo: yes
      sudo_user: ckaner

    - name: Get ckanext-archiver from git
      action: git repo=https://github.com/PublicaMundi/ckanext-archiver.git dest=/var/local/ckan/default/pyenv/src/ckanext-archiver version=dev.publicamundi.eu

    - name: Change owner of source folder
      shell: chown -R ckaner:users /var/local/ckan/default/pyenv/src

    - name: Run setup.py develop for ckanext-archiver
      action: command chdir=/var/local/ckan/default/pyenv/src/ckanext-archiver/ ../../bin/python setup.py develop
      sudo: yes
      sudo_user: ckaner

    - name: Install ckanext-archiver requirements
      action: pip requirements=/var/local/ckan/default/pyenv/src/ckanext-archiver/pip-requirements.txt virtualenv=/var/local/ckan/default/pyenv/
      sudo: yes
      sudo_user: ckaner

    - name: Get ckanext-datastorer from git
      action: git repo=https://github.com/PublicaMundi/ckanext-datastorer.git dest=/var/local/ckan/default/pyenv/src/ckanext-datastorer version=dev.publicamundi.eu

    - name: Change owner of source folder
      shell: chown -R ckaner:users /var/local/ckan/default/pyenv/src

    - name: Run setup.py develop for ckanext-datastorer
      action: command chdir=/var/local/ckan/default/pyenv/src/ckanext-datastorer/ ../../bin/python setup.py develop
      sudo: yes
      sudo_user: ckaner

    - name: Install ckanext-datastorer requirements
      action: pip requirements=/var/local/ckan/default/pyenv/src/ckanext-datastorer/pip-requirements.txt virtualenv=/var/local/ckan/default/pyenv/
      sudo: yes
      sudo_user: ckaner

    - name: Get ckanext-spatial from git
      action: git repo=https://github.com/PublicaMundi/ckanext-spatial.git dest=/var/local/ckan/default/pyenv/src/ckanext-spatial version=dev.publicamundi.eu

    - name: Change owner of source folder
      shell: chown -R ckaner:users /var/local/ckan/default/pyenv/src

    - name: Run setup.py develop for ckanext-spatial
      action: command chdir=/var/local/ckan/default/pyenv/src/ckanext-spatial/ ../../bin/python setup.py develop
      sudo: yes
      sudo_user: ckaner

    - name: Install ckanext-spatial requirements
      action: pip requirements=/var/local/ckan/default/pyenv/src/ckanext-spatial/pip-requirements.txt virtualenv=/var/local/ckan/default/pyenv/
      sudo: yes
      sudo_user: ckaner

    ###############
    # pycsw setup #
    ###############

    - name: Get pycsw
      action: git repo=https://github.com/PublicaMundi/pycsw.git dest=/var/local/ckan/default/pyenv/src/pycsw version=dev.publicamundi.eu

    - name: Change owner of source folder
      shell: chown -R ckaner:users /var/local/ckan/default/pyenv/src

    - name: Run setup build for pycsw
      action: command chdir=/var/local/ckan/default/pyenv/src/pycsw/ ../../bin/python setup.py build
      sudo: yes
      sudo_user: ckaner

    - name: Run setup install for pycsw
      action: command chdir=/var/local/ckan/default/pyenv/src/pycsw/ ../../bin/python setup.py install
      sudo: yes
      sudo_user: ckaner

    - name: Install pyproj
      action: pip name=pyproj virtualenv=/var/local/ckan/default/pyenv/
      sudo: yes
      sudo_user: ckaner

    - name: Install geolinks
      action: pip name=geolinks virtualenv=/var/local/ckan/default/pyenv/
      sudo: yes
      sudo_user: ckaner

    - name: Remove upstream wsgi script
      action: file path=/var/local/ckan/default/pyenv/src/pycsw/csw.wsgi state=absent
      sudo: yes
      sudo_user: ckaner

    - name: Copy pycsw configuration files
      action: copy src={{item}} dest=/{{item}} mode=644
      with_items:
        - var/local/ckan/default/pyenv/src/pycsw/csw.wsgi
        - var/local/ckan/default/pyenv/src/pycsw/default.cfg

    - name: Change owner of source folder
      shell: chown -R ckaner:users /var/local/ckan/default/pyenv/src/pycsw

    ######################
    # PublicaMundi setup #
    ######################

    - name: Get ckanext-publicamundi from git
      action: git repo=https://github.com/kalxas/ckanext-publicamundi.git dest=/var/local/ckan/default/pyenv/src/ckanext-publicamundi version=95-python2.6

    - name: Change owner of source folder
      shell: chown -R ckaner:users /var/local/ckan/default/pyenv/src

    - name: Run setup.py develop for ckanext-publicamundi
      action: command chdir=/var/local/ckan/default/pyenv/src/ckanext-publicamundi/ ../../bin/python setup.py develop
      sudo: yes
      sudo_user: ckaner

    - name: Install ckanext-publicamundi requirements
      action: pip requirements=/var/local/ckan/default/pyenv/src/ckanext-publicamundi/requirements.txt virtualenv=/var/local/ckan/default/pyenv/
      sudo: yes
      sudo_user: ckaner

    - name: Install gsconfig
      action: pip name=gsconfig virtualenv=/var/local/ckan/default/pyenv/
      sudo: yes
      sudo_user: ckaner

    - name: Install pyunpack
      action: pip name=pyunpack virtualenv=/var/local/ckan/default/pyenv/
      sudo: yes
      sudo_user: ckaner

    - name: Copy CKAN configuration files
      action: copy src={{item}} dest=/{{item}} mode=644
      with_items:
        - var/local/ckan/default/pyenv/src/ckan/development.ini

    - name: Change owner of source folder
      shell: chown -R ckaner:users /var/local/ckan/default/pyenv/src

    - name: Touch needed file
      action: file path=/var/local/ckan/default/pyenv/src/ckanext-publicamundi/ckanext/publicamundi/public/js/scratch.js state=touch
      sudo: yes
      sudo_user: ckaner

    - name: Initialize CKAN database
      action: command chdir=/var/local/ckan/default/pyenv/src/ckan/ ../../bin/paster db init -c development.ini
      sudo: yes
      sudo_user: ckaner

    - name: Setup permissions for datastore’s database
      action: command chdir=/var/local/ckan/default/pyenv/src/ckan/ ../../bin/paster datastore set-permissions postgres -c development.ini

    - name: Initialize ckanext-publicamundi extension
      action: command chdir=/var/local/ckan/default/pyenv/src/ckanext-publicamundi/ ../../bin/paster publicamundi-setup -c /var/local/ckan/default/pyenv/src/ckan/development.ini
      sudo: yes
      sudo_user: ckaner

    ##############
    # Maps setup #
    ##############

    - name: Get PublicaMundi MapClient
      action: git repo=https://github.com/PublicaMundi/MapClient.git dest=/var/local/ckan/default/pyenv/src/mapclient version=dev.publicamundi.eu

    - name: Change owner of source folder
      shell: chown -R ckaner:users /var/local/ckan/default/pyenv/src

    - name: Run setup build for MapClient
      action: command chdir=/var/local/ckan/default/pyenv/src/mapclient/ ../../bin/python setup.py build
      sudo: yes
      sudo_user: ckaner

    - name: Run setup install for MapClient
      action: command chdir=/var/local/ckan/default/pyenv/src/mapclient/ ../../bin/python setup.py install
      sudo: yes
      sudo_user: ckaner

    - name: Copy MapClient configuration files
      action: copy src={{item}} dest=/{{item}} mode=644
      with_items:
        - var/local/ckan/default/pyenv/src/mapclient/development.ini

    ################
    # apache setup #
    ################

    - name: Install needed packages
      action: yum pkg={{item}} state=installed
      with_items:
        - httpd
        - mod_wsgi

    - name: Change owner of storage folder
      shell: chown -R ckaner:apache /var/local/ckan/default/files/storage

    - name: Change permissions of storage folder
      action: file path=/var/local/ckan/default/files/storage mode=0775

    - name: Change owner of resources folder
      shell: chown -R apache:apache /var/local/ckan/default/files/resources

    - name: Change permissions of resources folder
      action: file path=/var/local/ckan/default/files/resources mode=0755

    - name: Remove default apache configuration
      action: file path=/etc/httpd/conf.d/welcome.conf state=absent

    - name: Copy apache configuration files
      action: copy src={{item}} dest=/{{item}} mode=644
      with_items:
        - etc/httpd/conf.d/ckan.conf

    - name: Restart apache
      action: service name=httpd state=restarted

    - name: Enabling apache service
      command: chkconfig httpd on
