---

# Configure HAProxy for simple HTTP reverse-proxying
haproxy:
 
  frontends:
    'admin':
      name: 'admin'
      bind:
      - { address: '0.0.0.0:8090', https: yes }

    'default':
       name: 'default'
       bind: 
       - { address: '0.0.0.0:80', https: no }
       #- { address: '0.0.0.0:443', https: yes }
       vhosts: []
#       - name: 'www'
#         hostname:
#         - 'www.example.com'
#         - 'web.example.com'
#         path:
#         - name: 'solr'
#           prefix: '/solr'
#           backend:
#             balance: 'roundrobin'
#             opts:
#               httpcheck: 'GET / HTTP/1.1' 
#             servers:
#             - address: 'solr.example.localdomain:8983'
#               opts: { weight: 1, maxconn: 64, check: ~ }
#         - name: 'catalog'
#           prefix: ~
#           backend:
#             balance: 'roundrobin'
#             opts:
#               forwardfor: ~
#               httpcheck: 'GET / HTTP/1.1'
#             # Force request with specified hostname (redirects will be rewritten)
#             hostname: 'app.example.localdomain'
#             # List backend servers with their specific options (if any)
#             servers:
#             - address: 'app-n1.example.localdomain:80'
#               opts: { weight: 1, maxconn: 32, check: ~ }
#             - address: 'app-n2.example.localdomain:80'
#               opts: { weight: 1, maxconn: 32, check: ~ }
#       - name: 'any'
#         hostname: ~
#         path:
#         - name: 'foo'
#           prefix: ~
#           backend:
#             servers:
#             - address: 'foo.example.localdomain:80'

  # Provide a control-local directory to keep generated secrets under
  secrets_dir: 'files/secrets'
