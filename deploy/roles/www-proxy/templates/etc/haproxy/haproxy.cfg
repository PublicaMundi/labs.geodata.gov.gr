global
    log 127.0.0.1  local0
    log 127.0.0.1  local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3

defaults
    log global
    mode    http
    option  httplog
    option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

{% macro option_with_value(k, v) -%}
{{k}}{% if v %} {{v| string| regex_replace('[ ]+', '\\ ')}}{% endif %}
{%- endmacro %}

{% if 'admin' in haproxy.frontends -%}
listen admin
    {# Bind -#}
    {% for bind in haproxy.frontends['admin'].bind -%}
    bind {{bind.address}}{% if (bind.https| default(0)) %} ssl crt {{cert_file}}{% endif %}
    {% endfor %}
    {# Configure stats #} 
    stats enable
    stats hide-version
    stats auth admin:{{admin_password}}
{% endif %}

{# Frontends -#}

{% for f in (haproxy.frontends.keys()| difference(['admin'])) -%}
{% set frontend = haproxy.frontends[f] -%}
frontend {{frontend.name| default(f)}}
    # Bind
    {% for bind in frontend.bind -%}
    bind {{bind.address}}{% if (bind.https| default(0)) %} ssl crt {{cert_file}}{% endif %} 
    {% endfor %} 
    # Define ACLs and select backends
    {% for vhost in frontend.vhosts -%}
    acl host-is-{{vhost.name}} {% if (vhost.hostname| default(false)) %}hdr(host) -i {{vhost.hostname| join(" ")}}{% else %}hdr_len(host) gt 0{% endif %} 
    {% for path in vhost.path| sort(reverse=1, attribute='prefix') -%}
    {% if path.prefix %}acl path-{{vhost.name}}-prefix-{{path.name}} path_beg {{path.prefix}}{% endif %} 
    use_backend backend-{{vhost.name}}-{{path.name}} if host-is-{{vhost.name}} {% if path.prefix %}path-{{vhost.name}}-prefix-{{path.name}}{% endif %} 
    {%- endfor %} {# for path #} 
    {% endfor %} {# for vhost #}
{% endfor %} {# for f #}

{# Backends -#}

{% for f in (haproxy.frontends.keys()| difference(['admin'])) -%}
{% set frontend = haproxy.frontends[f] -%}
{% for vhost in frontend.vhosts -%}
{% for path in vhost.path %}
{% set backend = path.backend %}
backend backend-{{vhost.name}}-{{path.name}}
    balance {{backend.balance| default('roundrobin')}}
    {% if backend.hostname is defined -%}
    # Rewrite Host header
    http-request set-header Host {{backend.hostname}}
    # Rewrite redirects from backend servers
    acl rsp-is-redirect res.hdr(Location) -m found
    rspirep ^Location:\ (https?)://({{backend.hostname}})\/(.*)  Location:\ \1://{{vhost.hostname| first}}/\3  if rsp-is-redirect
    # Todo: Rewrite cookie domain/path if needed
    {% endif %} {# if backend.hostname #} 
    {% if backend.opts is defined -%}
    # Options
    {% for k, v in backend.opts.items() -%}
    option {{option_with_value(k, v)}} 
    {% endfor %} {# for k,v #} 
    {% endif %} 
    # Servers
    {% for server in backend.servers -%}
    {% set server_address = server.address if (server.address is defined) else (server| string) -%} 
    {% set server_opts = server.opts.items() if (server.opts is defined) else [('check', none), ('weight', 1)] -%} 
    server node{{loop.index}} {{server_address}}{% for k,v in server_opts %} {{option_with_value(k,v)}}{% endfor %} 
    {% endfor %} {# for server #} 
{% endfor %} {# for path#} 
{% endfor %} {# for vhost #} 
{% endfor %} {# for f #} 

