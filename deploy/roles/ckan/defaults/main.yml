---

ckan_site_id: 'default'

# Base CKAN
ckan:
  source:
    # Specify source Git repository
    repo:
      url: 'https://github.com/ckan/ckan.git'
      push_url: ~
      version: 'ckan-2.2'
  
  # A UUID for this application instance; generate one per cluster!
  instance_uuid: ~
  #instance_uuid: '22d468de-2154-58ea-ac32-e5ffe8fd03b9' 
  
  config_file: 'development.ini'
  debug: 1

  # Basic directories
  pyenv_dir: '/usr/local/ckan/default/pyenv'
  config_dir: '/usr/local/ckan/default/etc'
  files_dir: '/var/local/ckan/default/files'
  temp_dir: '/var/tmp/ckan/default'
  
  # Configure virtual environment
  pyenv:
    # Provide packages to be installed befory any of the application requirements 
    basic_packages:
    - 'pudb'
    - 'pep8'
    - 'ipython'
    - 'pytz'
    - 'isodate'
    - 'argparse'
    - 'nose>=1.3'
 
  # Provide Solr endpoint URLs 
  solr:
    core_url: 'http://localhost:8983/solr/ckan'
  
  # Provide database connection URLs
  database:
    url: 'postgresql://ckaner:ckaner@localhost/ckan'
    datastore_read_url: 'postgresql://ckan_datareader:ckan_datareader@localhost/ckan_data'
    datastore_write_url: 'postgresql://ckan_datastorer:ckan_datastorer@localhost/ckan_data'
    
  plugins:
  - 'stats'
  - 'text_preview'
  - 'recline_preview'
  - 'pdf_preview'
  - 'datastore' 
  - 'resource_proxy' 

  # Serve as a WSGI application
  serve:
    # Choose the way to deploy it: 'apache2-mod-wsgi', 'apache2/paster' or 'paster'
    # Note that in case 'apache2/paster' or 'paster' is chosen, the paster-serve process
    # must be started/stopped manually.
    use: 'paster'
    # Specify the hostname for this service (i.e. the virtual host)
    hostname: ~
    # hostname: 'ckan.example.localdomain'
    url_prefix: '/'
    # Spawn WSGI processes/threads (applicable for 'apache2-mod-wsgi')
    wsgi_opts:
      num_processes: 2
      num_threads: 15
    # The following are paster-only options (applicable for 'paster', 'apache2/paster')
    paster_opts:
      listen_address: '127.0.0.1'
      port: 5000  

  # Site info
  site:   
    # The URL under which the application will be accessible. Note that, if blank,
    # it will be autogenerated from the values defined under ckan.serve.*.
    #url: 'http://ckan.example.localdomain'
    # Basic info
    title: Public Open Data
    #description: Blah Blah    
    # Logos
    favicon_url: '/images/icons/ckan.ico'
    logo_url: '/base/images/ckan-logo.png'

  # Provide users to be created on initialization
  users:
  - name: admin
    email: admin@example.com
    is_admin: yes
  - name: tester
    email: tester@example.com
  
  # Email settings
  email: 
    errors_to: webmaster@ckan.localdomain
    errors_from: ckaner@ckan.localdomain
    smtp: ~
    #smtp:
    #  server: mail.localdomain:587
    #  user: contact@ckan.localdomain
    #  password: s3cret
    #  mail_from: no-reply@ckan.localdomain

  # Configure HTTP sessions
  session:
    cookie_domain: ~
    #cookie_domain: 'ckan.example.localdomain'
    cookie_lifetime: ~
    #cookie_lifetime: 7200
    # The server-side secret to encrypt cookies with; generate one per cluster!
    secret: ~
    #secret: 'TPLhty94bW90oYJt' #


# Basic extensions for CKAN
ckanext:
  datastorer:
    install: yes
    source:
      repo:
        url: 'https://github.com/ckan/ckanext-datastorer.git' 
        push_url: ~
        version: master 
    plugins:
    - 'datastorer'

  archiver:
    install: yes
    source:  
      repo:
        url: 'https://github.com/ckan/ckanext-archiver.git'
        push_url: ~
        version: master
    plugins:
    - 'archiver'
  
