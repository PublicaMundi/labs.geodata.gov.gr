#
# mapclient - Pylons configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#

[DEFAULT]
debug = false

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5000

[app:main]
use = egg:mapclient
full_stack = true
static_files = true

cache_dir = /var/local/ckan/default/tmp/mapclient
beaker.session.key = mapclient
beaker.session.secret = 5wdr/p3bkM8PtR6Sw9kwuU0J0
app_instance_uuid = {877b4cd1-4d50-44af-bfe5-ac963f149bb2}

# Map Client - Application Settings
mapclient.debug = false
mapclient.proxy = true
mapclient.url.prefix =
mapclient.relative.path = /maps/
mapclient.url.catalog = http://83.212.104.89/
mapclient.catalog.metadata.database = true
mapclient.catalog.metadata.relative = /maps/data/metadata.json
mapclient.catalog.metadata.physical = /var/local/ckan/default/pyenv/src/mapclient/mapclient/public/data/metadata.json
mapclient.feedback.url.el = https://docs.google.com/forms/d/1T9gBjo9GTzElMB6qwTM7fGTb79u4ftB8BLj8c2kKthA/viewform
mapclient.feedback.url.en = https://docs.google.com/forms/d/1_biYR042tPc7bvQ7UimOVCFTvRLFjuh5BH3SwegfIgI/viewform

# Map Client - Sample views
mapclient.enable.api.dashboard = true
mapclient.enable.api.dashboard.wps.endpoint = http://zoo.dev.publicamundi.eu/cgi-bin/zoo_loader.cgi
mapclient.enable.api.dashboard.queries.resource = b6fc004b-07bd-4945-bf34-8ad4a8781c91,2a7b01b9-433a-4541-b056-08fde84c9fa9,f62e6867-f74c-4342-9755-976b574ac7f7,473e2317-3993-489c-a585-0a555e4086d6
mapclient.enable.api.dashboard.queries.alias = cities,blocks,roads,flags

mapclient.enable.api.examples = true
mapclient.enable.api.examples.queries.resource = b6fc004b-07bd-4945-bf34-8ad4a8781c91,473e2317-3993-489c-a585-0a555e4086d6
mapclient.enable.api.examples.queries.alias = cities,flags

# OSM layer name
mapclient.base.layers.osm = osm
mapclient.base.layers.ktimatologio = ktimatologio
mapclient.servers.osm =
#mapclient.servers.osm = http://geodata2.vm.grnet.gr:8020/{z}/{x}/{y}.png,http://geodata3.vm.grnet.gr:8020/{z}/{x}/{y}.png',http://geodata4.vm.grnet.gr:8020/{z}/{x}/{y}.png,http://geodata5.vm.grnet.gr:8020/{z}/{x}/{y}.png,http://geodata6.vm.grnet.gr:8020/{z}/{x}/{y}.png
#mapclient.servers.mapproxy =
mapclient.servers.mapproxy = http://node9.old.geodata.gov.gr:8080/service
#mapclient.servers.mapproxy = http://aiolos.survey.ntua.gr/mapproxy/service
mapclient.servers.tilecache =
#mapclient.servers.tilecache = http://geodata2.vm.grnet.gr:8020/tilecache/tilecache.cgi,http://geodata3.vm.grnet.gr:8020/tilecache/tilecache.cgi,http://geodata4.vm.grnet.gr:8020/tilecache/tilecache.cgi,http://geodata5.vm.grnet.gr:8020/tilecache/tilecache.cgi,http://geodata6.vm.grnet.gr:8020/tilecache/tilecache.cgi
mapclient.google.analytics = UA-67503374-1

#Proxy
# Response size limit (in bytes)
mapclient.proxy.limit.default = 1048576
# URLs white list (WMS requests are always allowed)
mapclient.proxy.white-list = http://zoo.dev.publicamundi.eu/cgi-bin/zoo_loader.cgi
# Response size limit for URLs of the white list. Overrides mapclient.proxy.limit.default
mapclient.proxy.limit.white-list = 10485760

# Data API
dataapi.sqlalchemy.catalog = postgresql://ckaner:ckaner@localhost/ckan
dataapi.sqlalchemy.vectorstore = postgresql://ckaner:ckaner@localhost/ckan_data
dataapi.cors.enabled = true
dataapi.error.details = false
dataapi.timeout = 30000
dataapi.resource.max = 4
dataapi.export.enabled = true
dataapi.export.formats.disabled = GPKG
dataapi.wps.endpoint = http://zoo.dev.publicamundi.eu/cgi-bin/zoo_loader.cgi
dataapi.wps.delay = 2000
dataapi.wps.corsEnabled = false

# Bing Maps application key
mapclient.base.layer.bing.key = AsmG2UKm_U2zgGZ0_c0GCbYn8J5HounGGomxxKglDjylrW97NTA8fFH0Q15uAQ3x

# Google Maps support
mapclient.base.layer.google.enabled = true

# Map center expected to be in the form of X, Y
mapclient.map.center = 2448716, 4600000
mapclient.map.zoom = 7

# File upload settings
upload.path = /var/local/ckan/default/tmp/mapclient/uploads/

# SQLAlchemy database URL
mapclient.sqlalchemy.url = postgresql://ckaner:ckaner@localhost/mapclient
vectorstore.sqlalchemy.url = postgresql://ckaner:ckaner@localhost/ckan_data

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false

# Logging configuration
[loggers]
keys = root, routes, mapclient, sqlalchemy

[handlers]
keys = console, filelog

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = filelog

[logger_routes]
level = WARN
handlers = filelog
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_mapclient]
level = WARN
handlers = filelog
qualname = mapclient

[logger_sqlalchemy]
level = WARN
handlers = filelog
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_filelog]
class = handlers.RotatingFileHandler
args = ('/var/local/ckan/default/tmp/mapclient/mapclient.log','a', 10485760, 10)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
