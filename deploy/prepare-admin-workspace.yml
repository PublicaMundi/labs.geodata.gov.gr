---

- hosts: external-admin 
  remote_user: root

  roles:
  - boilerplate
  
  tasks:
  
  - set_fact:
      repo: '{{project.repo}}'
      repo_fetch_url: 'git@{{project.repo.fetch.host}}:{{project.repo.path}}'
      repo_push_url: 'git@{{project.repo.push.host}}:{{project.repo.path}}'

  # Create Python virtual environment
  
  - name: Create virtualenv
    shell: /usr/bin/virtualenv /usr/local/pyenv creates=/usr/local/pyenv

  - name: Install newest version of pip
    pip:  name=pip extra_args='--upgrade' virtualenv=/usr/local/pyenv
  
  - name: Install required Python packages
    pip: name={{item}} virtualenv=/usr/local/pyenv
    with_items:
    - 'pudb'
    - 'pep8'
    - 'ipython'
    - 'pytz'
    - 'argparse'
    - 'jinja2'
    - 'netaddr'
    - 'ansible==1.8.4'

  - name: Create a shortcut to activate the environment
    copy:
      mode: 0744
      dest: ~/pyenv.sh
      content: '. /usr/local/pyenv/bin/activate'

  # Create a workspace and clone this repository

  - name: Copy private keys needed for repo
    copy: src=files/keys/{{item}} dest=~/.ssh/{{item}} mode=0600
    with_items:
    - '{{repo.key_file}}'
    - '{{repo.fetch.key_file}}'
    - '{{repo.push.key_file}}'

  - name: Create a workspace
    file: path=~/workspace state=directory mode=0755

  - ssh_config:
      name: '{{repo.fetch.host}}'
      hostname: '{{repo.ssh_host}}'
      port: '{{repo.ssh_port}}'
      identity_file: '~/.ssh/{{repo.fetch.key_file| default(repo.key_file)}}'
      strict_host_key_checking: 'no'
  
  - ssh_config:
      name: '{{repo.push.host}}'
      hostname: '{{repo.ssh_host}}'
      port: '{{repo.ssh_port}}'
      identity_file: '~/.ssh/{{repo.push.key_file| default(repo.key_file)}}'
      strict_host_key_checking: 'no'
 
  - name: Checkout project from repo
    command: git clone
      --recursive -b '{{repo.branch}}' -o '{{repo.remote}}' '{{repo_fetch_url}}' '{{project.name}}'
    args:
      chdir: ~/workspace
      creates: '~/workspace/{{project.name}}'

  - name: Set push-url for repo
    command: git remote set-url --push '{{repo.remote}}' '{{repo_push_url}}'
    args:
      chdir: '~/workspace/{{project.name}}'

  - name: Fetch updates from repo
    command: git fetch -a '{{repo.remote}}'
    args:
      chdir: '~/workspace/{{project.name}}'

